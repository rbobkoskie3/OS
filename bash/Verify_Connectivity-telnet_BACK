#! /bin/bash

#SERVER=flanlport200
#PORT=22

#SERVER=fathom.itl.cso.att.com
#PORT=9019

#SERVER=mtw-flood-isc
#PORT=9017

SERVER=mtw-flood-dbc
PORT=9017
#PORT=22

#SERVER=mtw-flood-asc
#PORT=50025

#SOCKET="flanlport200:22 fathom.itl.cso.att.com:9019 mtw-flood-isc:9017 mtw-flood-dbc:9017 mtw-flood-dbc:22 mtw-flood-asc:50025"
#for i in $SOCKET; do
#   SERVER=`echo $i |cut -d: -f1`
#   PORT=`echo $i |cut -d: -f2`
#   echo SERVER=$SERVER   PORT=$PORT 
#done


##########################################
# This command will work for a socket where the connectivity is up,
# however, it will 'hang' for a socket where the connectivity is down 
##########################################

#HOST=mtw-flood-dbc;for((port=9017;port<=9019;++port));do echo -en "$port ";if echo -en "open $HOST $port\nlogout\quit" | telnet 2>/dev/null | grep 'Connected to' > /dev/null;then echo -en "\n\nport $port/tcp is open\n\n";fi;done


##########################################
# Use telnet and grep for "Connection to"
# to verify socket, need to 'echo quit' to
# close the connection, this also closes
# a 'hanging' telnet, e.g., a telnet attempt
# to a socket where connectivity is down 
##########################################

VERIFY_SOCKET=/tmp/VERIFY_SOCKET

#SOCKET="flanlport200:22 fathom.itl.cso.att.com:9019 mtw-flood-isc:9017 mtw-flood-dbc:9017 mtw-flood-dbc:22 mtw-flood-asc:50025"
#for i in $SOCKET; do
#   SERVER=`echo $i |cut -d: -f1`
#   PORT=`echo $i |cut -d: -f2`

   telnet $SERVER $PORT 1>$VERIFY_SOCKET 2>&1&
   sleep 1

   if grep 'Connection to' $VERIFY_SOCKET 1>/dev/null 2>&1; then
      echo $? $SERVER:$PORT == UP 
   else
      echo $? $SERVER:$PORT == DOWN 
   fi
   kill -9 $! 1>/dev/null 2>&1

#done

#rm $VERIFY_SOCKET 1>/dev/null 2>&1


##########################################
# Use netstat to verify --- this is clumsy, e.g., a server
# can connect to more than one server on the same port
# grepping for ESTABLISHED is alos clumsy, as the connection
# closes before the grep completes, e.g., the test fails most
# of the time when grepping for ESTABLISHED
##########################################

## Resolve IP --- /etc/hosts, IT env.
#IP=`grep $FQDN /etc/hosts |awk -F' ' '{ printf $1 }'`
#if [ $? -ne 0 ]; then
   ## Resolve IP --- LDAP, ST, Prod env.
   #IP=`getent hosts $FQDN |awk -F' ' '{ printf $1 }'`
#fi


#telnet $SERVER $PORT 1>/dev/null 2>&1&
#netstat -an |grep $IP |grep $PORT 1>/dev/null 2>&1
#netstat -an |grep $IP |grep $PORT |grep ESTABLISHED 1>/dev/null 2>&1

#if grep "Connection to" $TMP; then
#if [ $? -eq 0 ]; then
#   echo $? --- 0 == SUCCESS
#else
#   echo $? --- !0 == FAIL
#fi

#kill -9 $! 1>/dev/null 2>&1
