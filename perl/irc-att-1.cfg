$file1path = "att_ircpcap1"; # Directory of stream 1 files
$file1pattern = "*-L7splitproto*bcp"; # Wildcard match for stream 1 files
$file2path = "att_ircpcap1"; # Directory of stream 2 files
$file2pattern = "*-bl08a_L7splprot*bcp"; # Wildcard match for stream 2 files

$groupfield = "SessionID"; # Field to group by. Usually Session ID, allows the search to be constrained.

$ignorefields = "AnalyzerID AnalyzerIP Hour Date Minute PopNm TimeStamp TimeStampFrac TzDst TzDstNm TzNm TzOfstMins __LocalTimeStamp ConnectTime"; # Space separated list of fields to ignore during comparisons
$matchmethod = "field"; # Match method = "field" (faster), "character" (more accurate apart from the fact that it isnt yet implemented)
$keyfields = "EventNm Tag"; # Space separated list of fields that MUST be equal for the lines to even be considered for a match. If absent in a line they will be ignored
$hltfields = "Protocol";

$rendertype = "keyvalue";

$matchconfidence = 0.7; # Value between 0 and 1 that determines the cutoff point in similarity to enable lines to be considered for matching
$confidence_weight = 0.5; # Weighting for confidence value in deciding a match (confidence is a value derived from comparing the 2 lines)
$distance_weight = 0.5; # Weighting for distance value in deciding a match (distance is the delta in offset from the session that candidate lines have)

$match_window = 15; # a window either side of the current line in file1 that matching line in file2 will be searched for. 0 = no limit. Specifying this value can speed things up significantly

#Uncomment for black on white
#$DISTANCE_COL = "${FRED}";$CONFIDENCE_COL = "${FBLUE}";$STREAM1_COL = "${BBLACK}${FGREEN}";$STREAM2_COL = "${BBLACK}${FRED}";$KEY_COL = "${BBLACK}${FWHITE}";$HLT_COL = "${BBLACK}${FWHITE}";
#Uncomment for white on black
$DISTANCE_COL = "${FRED}";$CONFIDENCE_COL = "${FCYAN}";$STREAM1_COL = "${BBLACK}${FGREEN}";$STREAM2_COL = "${BBLACK}${FRED}";$KEY_COL = "${BWHITE}${FBLACK}";$HLT_COL = "${BWHITE}${FBLACK}";

@conditional_ignores =
(
#
# All header files have a TXid in TAG[1]. Fixing of initialization bug means these now start from 1 instead of 0
#
#	"Tag,eq,USER-AGENT,TAG[1]",
#
#	CSEQs and SSEQs calculated differently (also displaced)
#
	"Tag,eq,CSEQ,TAG[0]",
	"Tag,eq,SSEQ,TAG[0]",
);

1;
